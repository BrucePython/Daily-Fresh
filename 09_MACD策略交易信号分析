import talib


def init(context):
    context.s1 = "000001.XSHE"
    context.s2 = "601988.XSHG"
    context.s3 = "000068.XSHE"
    context.stocks = index_components("000300.XSHG")

    # 使用MACD需要设置长短均线和macd平均线的参数
    # 长短均线得出差离值dif
    context.SHORTPERIOD = 12
    context.LONGPERIOD = 26
    # 对差离值取9日的移动平均线，得出讯号线dea
    context.SMOOTHPERIOD = 9
    context.OBSERVATION = 100



def handle_bar(context, bar_dict):

    for stock_code in context.stocks:
        # 读取历史数据，使用sma方式计算均线准确度和数据长度无关，但是在使用ema方式计算均线时建议将历史数据窗口适当放大，结果会更加准确
        # 获取当天前面的100天的收盘价格数据，为了计算MACD的移动平均线
        prices = history_bars(stock_code, context.OBSERVATION, '1d', 'close')

        # 用Talib计算MACD取值，得到三个时间序列数组，分别为macd（差离值）, signal（讯号线） 和 hist（柱状图）
        macd, signal, hist = talib.MACD(prices, context.SHORTPERIOD, context.LONGPERIOD, context.SMOOTHPERIOD)

        # macd 是长短均线的差值，signal是macd的均线，使用macd策略有几种不同的方法，我们这里采用macd线突破signal线的判断方法

        # 如果macd(蓝色)从上往下跌破macd_signal(黄色)，股票下跌

        if macd[-1] - signal[-1] < 0 and macd[-2] - signal[-2] > 0:
            # 计算现在portfolio中股票的仓位
            curPosition = context.portfolio.positions[stock_code].quantity
            # 进行清仓
            if curPosition > 0:
                order_target_value(context.s1, 0)

        # 如果短均线(蓝色)从下往上突破长均线(黄色)，为入场信号，股票上涨
        if macd[-1] - signal[-1] > 0 and macd[-2] - signal[-2] < 0:
            # 满仓入股
            order_target_percent(stock_code, 0.1)
